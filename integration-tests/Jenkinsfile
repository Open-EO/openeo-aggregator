#!/usr/bin/env groovy

@Library('lib')_

def node_label = 'default'
def wipeout_workspace = true
def python_version = "3.8"
def docker_registry = globalDefaults.docker_registry_prod()
def pytest_results = 'test_results/pytest_results.xml'
def pylint = false
def test_coverage = false


pipeline {
  agent {
    node {
      label node_label
    }
  }
  environment {
    BRANCH_NAME                 = "${env.BRANCH_NAME}"
    BUILD_NUMBER                = "${env.BUILD_NUMBER}"
    BUILD_URL                   = "${env.BUILD_URL}"
    DATE                        = utils.getDate()
    JOB_NAME                    = "${env.JOB_NAME}"
    JOB_URL                     = "${env.JOB_URL}"
    WORKSPACE                   = "${env.WORKSPACE}"
    PYTEST_RESULTS              = "${pytest_results}"
    PYLINT                      = "${pylint}"
    TEST_COVERAGE               = "${test_coverage}"
    EXTRAS_REQUIRE              = "${extras_require}"
    SYSTEM_SITE_PACKAGES        = "nope"
  }
  parameters {
    string(name: 'image_version', defaultValue: '')
  }
  options {
    // Disable default checkout to have more control over checkout step
    skipDefaultCheckout(true)
  }
  stages {
    stage('Checkout') {
      steps {
        script {
          git.checkoutDefault(true)
          git.checkoutRepo('https://github.com/Open-EO/openeo-aggregator', '*/master')
        }
      }
    }
    stage("Build test venv") {
      steps {
        script {
          dir("integration-tests") {
            python.createVenv(docker_registry, python_version)
          }
        }
      }
    }
    stage("Run tests") {
      steps {
        script {
          def tests_location = '.'
          def hadoop = false
          def extra_container_volumes  = ''
          def extra_env_variables = [
            "OPENEO_BACKEND_URL=https://openeocloud-dev.vito.be/",
          ]
          def extra_env_secrets = ''
          def pre_test_script = ''
          dir("integration-tests") {
            python.test(docker_registry, python_version, tests_location, hadoop, extra_container_volumes, extra_env_variables, extra_env_secrets, pre_test_script)
          }
        }
      }
      post {
        always {
          script {
            // Based on python.recordTestResults()
            junit "integration-tests/test_results/pytest_results.xml"
          }
        }
      }
    }
    stage("Trigger CDSE deploy") {
      steps {
        script {
          utils.triggerJob("openEO/openeo-aggregator-cdse", [])
        }
      }
    }
  }
}
